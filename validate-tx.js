const fs=require('fs');const path=require('path');const crypto=require('crypto');const {ec:EC}=require('elliptic');const ec=new EC('secp256k1');function sha256(buf){return crypto.createHash('sha256').update(buf).digest();}
function verifyTx(tx){const {from,to,amount,pubkey,sig}=tx;if(!from||!to||typeof amount!=='number'||!pubkey||!sig){return false;}const key=ec.keyFromPublic(pubkey,'hex');const msg=`${from}->${to}:${amount}`;const hash=sha256(Buffer.from(msg));try{return key.verify(hash,sig);}catch(e){return false;}}const txs=JSON.parse(fs.readFileSync(path.resolve(__dirname,'data/txs.json'),'utf8'));let ok=true;for(const tx of txs){if(!verifyTx(tx)){console.error('❌ Invalid TX:',tx);ok=false;}}console.log(ok?'✅ All transactions valid.':'❌ Some transactions invalid.');process.exit(ok?0:1);